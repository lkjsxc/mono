{
  "version": "1.0-ULTIMATE",
  "llm": {
    "endpoint": "http://host.docker.internal:1234/v1/chat/completions",
    "model": "qwen/qwen3-8b",
    "context_window": 4096,
    "optimization": {
      "thinking_mode": {
        "temperature": 0.6,
        "top_p": 0.95,
        "top_k": 20,
        "min_p": 0.0
      },
      "action_mode": {
        "temperature": 0.7,
        "top_p": 0.8,
        "top_k": 20,
        "min_p": 0.0
      }
    },
    "logging": {
      "enabled": true,
      "file": "data/log.txt"
    }
  },
  "agent": {
    "memory_system": {
      "working_memory": {
        "target_utilization": 0.75,
        "max_context_tokens": 96000,
        "auto_cleanup_limit": 24,
        "priority_factors": {
          "recency": 0.4,
          "relevance": 0.35,
          "role_alignment": 0.25
        }
      },
      "storage": {
        "unlimited_capacity": true,
        "auto_enrichment": true,
        "knowledge_graph": true,
        "cross_references": true,
        "progressive_enhancement": true
      }
    },
    "prompts": [
      {
        "name": "system_role",
        "trigger": "always",
        "content": "The most thoughtful autonomous loop. It determines only one optimal next action. Generates valid XML that strictly adheres to the output contract. Do not output comments outside the required root element."
      },
      {
        "name": "memory_model",
        "trigger": "always",
        "content": "Working Memory = The area that is always included in the prompt. Storage = An unlimited-capacity knowledge base managed by key-value pairs, with data read/written via actions and stored as a comma-separated tag string. Tag specifications: Lowercase ASCII characters, tokens separated by underscores, multiple tags can be combined with a comma, tag order is irrelevant, and iteration tags are automatically added. Values: Only plain text in UTF-8 format is allowed (no embedded JSON/XML/CSV). Structure representation should use additional tags rather than nested formats. Aim for 60-120 tokens as the target, with large concepts broken down into manageable parts."
      },
      {
        "name": "iteration_principles",
        "trigger": "never",
        "content": "Continuity: always build from existing memory; preserve traceability of reasoning."
      },
      {
        "name": "output_contract",
        "trigger": "always",
        "content": "Always output EXACTLY one agent root with exactly one next_state and exactly one action. Follow allowed enumerations strictly."
      },
      {
        "name": "output_schema",
        "trigger": "always",
        "content": "agent next_state STATE next_state action type TYPE type tags TAGS tags value VALUE value action agent"
      },
      {
        "name": "schema_rules",
        "trigger": "always",
        "content": "Allowed states: thinking | commanding | evaluating | paging. Allowed types: working_memory_add | working_memory_remove | storage_load | storage_save | storage_search. Value required ONLY for working_memory_add and storage_save. For other types emit empty value. Tags comma separated no spaces."
      },
      {
        "name": "safety",
        "trigger": "always",
        "content": "Do not rename existing tags unnecessarily. No freeform JSON. If working memory grows too large summarize then store. Archive aggressively but preserve semantic resolution."
      },
      {
        "name": "quality",
        "trigger": "always",
        "content": "Clarity precision minimal verbosity. Leave concise reasoning traces in working_memory when thinking or evaluating. Default cyclical flow: thinking then commanding then evaluating optionally paging then thinking."
      },
      {
        "name": "state_thinking",
        "trigger": "state=thinking && (working_memory_length < 8192)",
        "content": "Analyze working memory to identify knowledge gaps or next actionable steps hindering progress."
      },
      {
        "name": "state_commanding",
        "trigger": "state=commanding && (working_memory_length < 8192)",
        "content": "Issue concrete action progressing creation enrichment clarification or retrieval."
      },
      {
        "name": "state_evaluating",
        "trigger": "state=evaluating && (working_memory_length < 8192)",
        "content": "Assess recent results for correctness gaps quality issues opportunities to refine direction."
      },
      {
        "name": "state_paging",
        "trigger": "state=paging || (working_memory_length >= 8192)",
        "content": "its primary function is to summarize or store away less important information in working memory, compressing it to an essential and efficient form that maximizes working memory capacity."
      },
      {
        "name": "state_default",
        "trigger": "state=default && (working_memory_length < 8192)",
        "content": "Maintain momentum think act evaluate archive as needed preserving deterministic structure."
      },
      {
        "name": "working_memory",
        "trigger": "always",
        "content": "{working_memory}"
      }
    ]
  },
  "iteration_limit": {
    "enable": false,
    "value": 100000
  },
  "paging_trigger": {
    "enable": false,
    "value": 98192
  }
}
}